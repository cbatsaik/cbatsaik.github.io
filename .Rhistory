'demo('
'demo()'
demo()
:::{#intro-heading}
q90
q()
shiny::runApp('~/Documents/COMP 212/Opioid_Epidemic')
v <- 4:12
print(v)
w <- v / 10 + 5 #Notice, we first divide each entry by 10 and then add 5 to that
print(w)
w <- c(5.4,5.5,5.6,5.7,5.8,5.9)
print(w)
x <- (0:50)  * pi / 50 # numbers from zero to pi
y <- sin(x)  # create some data
y[20] <- 0.2 # put an outlier in the 20th spot
plot(x,y, main="A simple plot")
library(ggplot2)
ggplot() +
geom_point(aes(x=x,y=y)) +
ggtitle("A simple plot")
x <- 0*(1:6)
x[3:5] <- 2
x <- 0*(1:6)
x[3:5] <- 2
x <- 0*(1:6)
x[3:5] <- 2
print(x)
x <- ((0:101)*4/101)-1
print(x)
x <- ((0:101)*5/101)-1
print(x)
x <- ((0:101)*4/101)-1
print(x)
w <- c(2,2,2,2,5,6,7,8,9,-1)
print(w)
A <- c(0.2,0.6,0.2,0.8,0.6,0.0,0.8,1.0,0.0,1.0,0.0,0.5)
dim(A) <- c(3,4)
print(A)
B <- matrix(0,6,11)
B[3:5,2:6] <- 1
B[2,9] <- 2
B[4:6,10:11] <- 4
print(B)
r1 <- matrix(runif(20),4,5)
print(r1)
r2 <- matrix(rnorm(12),4,3)
print(r2)
vec <- c(4,5,6,7,8,9)
C = diag(vec)
print(C)
# your code here: end with something like "print(W)"
W <- c(16,0,1,0,-2,0,-1,0,pi,0,12,1)
dim(W) <- c(4,3)
print(W)
# your code here: end with something like "print(W)"
W <- matrix(0,4,3)
W[1,1] <- 16
W[3,1, 4,3] <- 1
# your code here: end with something like "print(W)"
W <- matrix(0,4,3)
W[1,1] <- 16
W[3:1, 4:3] <- 1
# your code here: end with something like "print(W)"
W <- matrix(0,4,3)
W[1,1] <- 16
W[3:1] <- 1
W[1,2] <- -2
W[3,2] <- -1
W[1,3] <- pi
W[3,3] <- 12
print(W)
# your code here: end with something like "print(W)"
W <- matrix(0,4,3)
W[1,1] <- 16
W[3:1] <- 1
W[1,2] <- -2
W[3,2] <- -1
W[1,3] <- pi
W[3,3] <- 12
W[3,4] <- 1
# your code here: end with something like "print(W)"
W <- matrix(0,4,3)
W[1,1] <- 16
W[3:1] <- 1
W[1,2] <- -2
W[3,2] <- -1
W[1,3] <- pi
W[3,3] <- 12
W[4,3] <- 1
print(W)
# your code here: end with something like "print(W)"
W <- matrix(0,4,3)
W[1,1] <- 16
W[3:1] <- 0
W[1,2] <- -2
W[3,2] <- -1
W[1,3] <- pi
W[3,3] <- 12
W[4,3] <- 1
print(W)
# your code here: end with something like "print(W)"
W <- matrix(0,4,3)
W[1,1] <- 16
W[3,1] <- 1
W[1,2] <- -2
W[3,2] <- -1
W[1,3] <- pi
W[3,3] <- 12
W[4,3] <- 1
print(W)
X <- matrix(1,5,4)
print(X)
X <- matrix(1,5,4)
X[1:4] <- 2
print(X)
X <- matrix(1,5,4)
X[4:1] <- 2
print(X)
X <- matrix(1,5,4)
X[1, 1:4] <- 2
print(X)
X <- matrix(1,5,4)
X[1, 1:4] <- 2
X[2, 1:3] <- 2
print(X)
X <- matrix(1,5,4)
X[1, 1:4] <- 2
X[2, 1:3] <- 2
X[3, 1:2] <- 2
print(X)
Y <- matrix(0, 9, 9)
Y <- matrix(0, 9, 9)
print(Y)
Y <- matrix(0, 9, 9)
vec <- c(4,4,4,4,4,4,4,4,4)
Y <- diag(vec)
print(Y)
install.packages("DiagrammeR")
library(DiagrammeR)
library(DiagrammeR)
# Create nodes
nodes <- create_nodes(nodes = c("Order", "Cheese", "Pepperoni", "Olives", "Customer", "Phone"))
library(DiagrammeR)
# Create nodes
nodes <- create_nodes(nodes = c("Order", "Cheese", "Pepperoni", "Olives", "Customer", "Phone"))
library(DiagrammeRsvg)
install.packages('DiagrammeRsvg')
library(DiagrammeRsvg)
# Define nodes and edges
nodes <- c("Order", "Cheese", "Pepperoni", "Olives", "Customer", "Phone")
edges <- data.frame(from = c("Order", "Order", "Order", "Order", "Customer"),
to = c("Cheese", "Pepperoni", "Olives", "Customer", "Phone"))
# Create directed graph
graph <- create_graph(nodes_df = nodes, edges_df = edges, directed = TRUE)
library(DiagrammeRsvg)
# Define nodes and edges
nodes <- c("Order", "Cheese", "Pepperoni", "Olives", "Customer", "Phone")
edges <- data.frame(from = c("Order", "Order", "Order", "Order", "Customer"),
to = c("Cheese", "Pepperoni", "Olives", "Customer", "Phone"))
# Create directed graph
graph <- create_graph(nodes_df = nodes, edges_df = edges, directed = TRUE)
library(DiagrammeRsvg)
# Define nodes and edges
nodes <- c("Order", "Cheese", "Pepperoni", "Olives", "Customer", "Phone")
edges <- data.frame(from = c("Order", "Order", "Order", "Order", "Customer"),
to = c("Cheese", "Pepperoni", "Olives", "Customer", "Phone"))
# Create directed graph
graph <- create_graph(nodes_df = nodes, edges_df = edges, directed = TRUE)
library(DiagrammeR)
# Create a graph using DiagrammeR
graph <- create_graph("graph")
library(DiagrammeR)
# Create a graph using DiagrammeR
graph <- create_graph("graph")
# Install and load DiagrammeR package
install.packages("DiagrammeR")
library(DiagrammeR)
# Create a basic directed graph
graph <- create_graph()
# Add nodes
graph <- add_node(graph, "Order")
graph <- add_node(graph, "Cheese")
graph <- add_node(graph, "Pepperoni")
graph <- add_node(graph, "Olives")
graph <- add_node(graph, "Customer")
graph <- add_node(graph, "Phone")
# Add edges to represent relationships
graph <- add_edge(graph, from = "Order", to = c("Cheese", "Pepperoni", "Olives", "Customer"))
install.packages("DiagrammeR")
library(DiagrammeR)
# Create a basic directed graph
graph <- create_graph()
# Add nodes
graph <- add_node(graph, "Order")
graph <- add_node(graph, "Cheese")
graph <- add_node(graph, "Pepperoni")
graph <- add_node(graph, "Olives")
graph <- add_node(graph, "Customer")
graph <- add_node(graph, "Phone")
# Add edges to represent relationships
graph <- add_edge(graph, from = "Order", to = c("Cheese", "Pepperoni", "Olives", "Customer"))
shiny::runApp('~/Documents/COMP 212/Opioid_Epidemic')
shiny::runApp('~/Documents/COMP 212/Opioid_Epidemic')
